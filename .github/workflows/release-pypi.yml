# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : pypi release
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
# ---------------------------------------------------------------------------------------

name: "Pypi Release"

on:
    workflow_dispatch:
      inputs:
        opt_build_type:
          type: choice
          description: Build Type
          options:
          - py setup.py
          - py build
        opt_pypi_type:
          type: choice
          description: Pypi Service
          options:
          - Official
          - Test

jobs:
  build:
    name: Prepare Package
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Start
        run: | 
              echo "Starting build: ${{ github.event.inputs.opt_build_type }}" / ${{ inputs.opt_build_type }}

      - name: ☑️ Checkout
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: 🐍 Install Build Tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build

      - name: ☸️ Build tarball
        run: |
          if [ "${{ github.event.inputs.opt_build_type }}" = "py setup.py" ]; then
            echo "Starting build: py setup.py"
            python setup.py sdist
          fi

          if [ "${{ github.event.inputs.opt_build_type }}" = "py build" ]; then
            echo "Starting build: py build"
            python -m build . --sdist
          fi

      - name: "🪢 Twine › Check Dist"
        run: |
          twine check dist/*
  
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

# ---------------------------------------------------------------------------------------
#   Pypi: Official Stable Release
# ---------------------------------------------------------------------------------------

  pypi-publish-official:
    name: >-
      📦 PyPI › Official
    if: ${{ github.event.inputs.opt_pypi_type == 'Official' }}
    needs:
    - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    environment:
      name: Orion
      url: https://pypi.org/p/mkdocs-link-embeds-plugin

    steps:
    - name: "Download › Saved Artifacts"
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
  
    - name: Release 📦 PyPI Official
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        #password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
        print-hash: true

# ---------------------------------------------------------------------------------------
#   Pypi: Test API
# ---------------------------------------------------------------------------------------

  pypi-publish-test:
    name: >-
      📦 PyPI › Test Api
    if: ${{ github.event.inputs.opt_pypi_type == 'Test' }}
    needs:
    - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    environment:
      name: Orion
      url: https://test.pypi.org/p/mkdocs-link-embeds-plugin

    steps:
    - name: "Download › Saved Artifacts"
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Release 📦 PyPI Test
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
